pid               <%= pid_file %>;
error_log         <%= error_log %> error;

worker_processes      <%= worker_processes %>;
worker_rlimit_core    500M;
working_directory     <%= nginx_tests_core_dir(config_id) %>;
debug_points abort;

events {
  worker_connections  4096;
  use                 <%= nginx_event_type %>;
}

http {
  default_type    application/octet-stream;

  log_format main '$remote_addr - [$time_local] $host $request ($status) $request_time s '
                  '$body_bytes_sent b $http_referer $http_x_forwarded_for - '
                  '[$upstream_cache_status] $upstream_response_time s - $http_user_agent ';

  access_log      <%= access_log %> main;

  <%= additional_config %>
  proxy_cache_path <%= proxy_cache_path %> levels=1:2 keys_zone=zone:<%= keys_zone %> inactive=<%= inactive %> max_size=<%= max_size %> loader_files=100 loader_sleep=1;

  error_page   404 /error_pages/404.html;

  server {
    listen        <%= nginx_port %>;
    server_name   <%= nginx_host %>;

    <%= write_directive("selective_cache_purge_redis_unix_socket", redis_unix_socket) %>
    <%= write_directive("selective_cache_purge_redis_host", redis_host) %>
    <%= write_directive("selective_cache_purge_redis_port", redis_port) %>
    <%= write_directive("selective_cache_purge_redis_password", redis_password) %>
    <%= write_directive("selective_cache_purge_redis_database", redis_database) %>

    location ~ /purge(.*) {
      <%= write_directive("selective_cache_purge_query", purge_query) %>
    }

    location /error_pages {
      internal;
      return 404 $uri;
    }

    location /no-cache {
      proxy_pass http://unix:/tmp/nginx_tests/nginx.socket;
    }

    location /unavailable {
      add_header "x-cache-status" $upstream_cache_status;

      proxy_pass http://unix:/tmp/nginx_tests/test_unavailable.socket;

      proxy_cache zone;
      proxy_cache_key "$uri";
      proxy_cache_valid 200 1m;
      proxy_cache_valid any 30s;
      proxy_cache_use_stale timeout updating http_500;
    }

    location / {
      add_header "x-cache-status" $upstream_cache_status;

      proxy_pass http://unix:/tmp/nginx_tests/nginx.socket;

      proxy_no_cache     $arg_nocache;
      proxy_cache_bypass $arg_nocache;

      proxy_cache zone;
      proxy_cache_key "$uri";
      proxy_cache_valid 200 1m;
      proxy_cache_valid any 30s;
      proxy_cache_use_stale timeout updating http_500;
    }
  }

  server {
    listen unix:/tmp/nginx_tests/nginx.socket;

    location /cookie {
      add_header "Set-Cookie" "some=value";
      return 200;
    }

    location /not-found {
      return 404;
    }

    location /big-cache {
      expires 30d;
      return 200;
    }

    location /small-cache {
      expires 5d;
      return 200;
    }

    location /conditional {
      expires 10s;

      if ($arg_error = 1) {
        return 500;
      }

      return 200;
    }

    location / {
      return 200;
    }
  }
}
